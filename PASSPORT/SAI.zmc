'Option Explicit

dim rol
dim sintesis_user_0
dim sintesis_user
dim sintesis_pass
dim sintesis_agencia
dim sintesis_fecha_ini
dim sai_un
dim ini
dim fin

dim error_generico

dim hoy
dim desde, desde_
dim hasta, hasta_
dim delay
delay=1

dim rutacuentas
rutacuentas="D:\AD\BUROS\scripts\carnet_consulta.txt"

'dim rutafechas
'rutafechas="C:\AD\PROCONTA\PASSPORT\consulta_fechas\fechas.txt"

dim rutacredenciales
rutacredenciales="D:\AD\BUROS\PASSPORT\credenciales\credenciales_sai.txt"

dim ruta_print_job
ruta_print_job="D:\AD\BUROS\temp_imp_pport\temp.txt"

dim rutaprocesados
rutaprocesados="D:\AD\BUROS\descargas\"



dim rutacarpetanueva
dim errorloguin
dim mensaje

Sub ZMain()
	Dim Text, ret
	sintesis_user=  ReadIni(rutacredenciales ,"CREDENCIALES","OTR_USER")
	sintesis_pass=  ReadIni(rutacredenciales ,"CREDENCIALES","OTR_PASS")
	ambiente=  ReadIni(rutacredenciales ,"CREDENCIALES","ambiente")
    if ambiente="desa" then
        call solicitamenu()
    end if
    
    if ambiente="prod" then
            SendHostKeys ("2")
            SendHostKeys ("<RETURN>")
    end if
		
    'ini=ReadIni(rutafechas,"FECHAS","fechaini")
	'fin=ReadIni(rutafechas,"FECHAS","fechafin")
	
    'prod=ReadIni(rutafechas,"PROD","PROD")
 
    'if (prod=0) then
     '   call solicitamenu()
     'end if
    
    if (Inicia_sesion2 = False) then
		
	else
        
        call elimina_archivo(ruta_print_job)
		call navegacion()
		call LeeArchivo()
		call EscribeFin()
		call cerrar()
		
			
		
		
		'if (len(sai_un)>0) Then
			'call LeeArchivo()
			'call salirmenu()	
		'else
			'call EscribeError( "EL USUARIO NO TIENE UNA UNIDAD DE NEGOCIOS VALIDA CONTACTARSE CON DANIELA SANJINEZ" )
	end if
End sub

Function Inicia_sesion2 ()
		Inicia_sesion2=False
        call espera(2)
		SendHostKeys (sintesis_user)
		call espera(3)
		SendHostKeys ("<RETURN>")
		call espera(1)
		errorloguin = trim(GetString(23,1,40))
		if (errorloguin <> "" )then 
			Inicia_sesion2=False
			call EscribeError( errorloguin )	
			Exit Function
		else
			SendHostKeys (sintesis_pass)
			call espera(1)
			SendHostKeys ("<RETURN>")
		end if
		
		call espera(1)
		
		'mensaje=trim(GetString(13, 2, 50))
		
		'msgbox (mensaje)
		'Exit Function
		
		'if mensaje = "MODULOS" then			
			Inicia_sesion2=True
		'else
		'	call EscribeError("NO SE ENCONTRO EL MENU DE MODULOS VERIFIQUE POR FAVOR")	
		'	Inicia_sesion2=False
		'end if	
	
End Function

Function ReadIni( myFilePath, mySection, myKey )
	Const ForReading   = 1
	Const ForWriting   = 2
	Const ForAppending = 8

	Dim intEqualPos
	Dim objFSO, objIniFile
	Dim strFilePath, strKey, strLeftString, strLine, strSection

	Set objFSO = CreateObject( "Scripting.FileSystemObject" )

	ReadIni = ""
	strFilePath = Trim( myFilePath )
	strSection = Trim( mySection )
	strKey = Trim( myKey )

	If objFSO.FileExists( strFilePath ) Then
		Set objIniFile = objFSO.OpenTextFile( strFilePath, ForReading, False )
		Do While objIniFile.AtEndOfStream = False
			strLine = Trim( objIniFile.ReadLine )

			' Check if section is found in the current line
			If LCase( strLine ) = "[" & LCase( strSection ) & "]" Then
				strLine = Trim( objIniFile.ReadLine )

				' Parse lines until the next section is reached
				Do While Left( strLine, 1 ) <> "["
					' Find position of equal sign in the line
					intEqualPos = InStr( 1, strLine, "=", 1 )
					If intEqualPos > 0 Then
						strLeftString = Trim( Left( strLine, intEqualPos - 1 ) )
						' Check if item is found in the current line
						If LCase( strLeftString ) = LCase( strKey ) Then
							ReadIni = Trim( Mid( strLine, intEqualPos + 1 ) )
							' In case the item exists but value is blank
							If ReadIni = "" Then
								ReadIni = " "
							End If
							' Abort loop when item is found
							Exit Do
						End If
					End If

					' Abort if the end of the INI file is reached
					If objIniFile.AtEndOfStream Then Exit Do

					' Continue with next line
					strLine = Trim( objIniFile.ReadLine )
				Loop
			Exit Do
			End If
		Loop
		objIniFile.Close
	Else
		'WScript.Echo strFilePath & " doesn't exists. Exiting..."
		'Wscript.Quit 1
	End If
End Function

sub graficapantalla()
	dim y, linea, linea_acumulada
	linea="   000000000111111111122222222223333333333444444444455555555556666666666777777777788888"
	linea_acumulada= linea & vbCrLf 
	linea="   123456789012345678901234567890123456789012345678901234567890123456789012345678901234"
	linea_acumulada= linea_acumulada & linea & vbCrLf 
	For y = 1 To 25
		linea = GetString(y,1, 80)
		linea_acumulada= linea_acumulada &  y & "  " & linea & vbCrLf 
	Next
	
	call EscribePantalla(linea_acumulada, "D:\AD\BUROS\temp\" )
end sub

sub esperapantalla1(byref pantalla_buscada, x, y, largo)
	dim pantalla_actual
                pantalla_actual = GetString(x, y, largo)
                'msgbox "Inicial |" & pantalla_buscada &"|"&pantalla_actual
                Do While pantalla_actual <> pantalla_buscada
					espera(1)
					pantalla_actual = GetString(x, y, largo)
               'msgbox "En Proceso |" & pantalla_buscada &"|"&pantalla_actual
				Loop
                'msgbox "FINAL |" & pantalla_buscada &"|"&pantalla_actual
end sub

sub solicitamenu()
    Dim Text, ret
    SendHostKeys ("cd /nfs/bexe")
    ret = WaitForHostUpdate(10)
    SendHostKeys ("<RETURN>")
    SendHostKeys ("export DBSFI=sfi021_tic")
    ret = WaitForHostUpdate(10)
    SendHostKeys ("<RETURN>")
    SendHostKeys ("fglgo ad000.4gi")
    ret = WaitForHostUpdate(10)
    SendHostKeys ("<RETURN>")
end sub

Sub navegacion()
	Dim Text, ret
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	espera(1)
	SendHostKeys ("<RETURN>")
	espera(1)
	SendHostKeys ("<RETURN>")
	espera(1)
End Sub

Sub navegacion2()
	Dim Text, ret
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
End Sub

Sub extracto_bancario (byref carnet)
	Dim Text, ret
    Dim reportes, controlCarnet
	'ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	'SELECCIONA BANCO (1-8)
	'SendHostKeys (banco)
	'ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	'INGRESA NUMERO DE CUENTA BANCARIA
	'SendHostKeys (cuenta)
	'ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys (carnet)
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
    espera(2)
	'call graficapantalla()
	ret = WaitForHostUpdate(10)
    controlCarnet=GetString(23,1,34)
	controlCarnet1=GetString(23,1,21)
	controlCarnet2=GetString(23,1,18)
	'call graficapantalla()'
	espera(1)
    'msgbox(controlCarnet & " " & controlCarnet1)
   if controlCarnet<> "No Existe Datos para Este Numero.." Then
			if controlCarnet1<> "Termine de procesar.." and controlCarnet2<> "NO EXISTE REGISTRO"then
				call verificaParametros()
			else
				'msgbox("entro al false")
				espera(1)
				call esperapantalla1("Termine de procesar..",23,1,21)
				espera(2)
				SendHostKeys ("<RETURN>")
				call EsperarExistenciaArchivo()
				call mueve_archivo (carnet)
			end if
   end if
   
   
	
    'SendHostKeys (fin)
    espera(1)
    ret = WaitForHostUpdate(10)
    SendHostKeys ("<ETX>")
    ret = WaitForHostUpdate(10)
	SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
    SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
    SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
    SendHostKeys ("<RETURN>")
    ret = WaitForHostUpdate(10)
    SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
    SendHostKeys ("<RETURN>")
    ret = WaitForHostUpdate(10)
	SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
    SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
    SendHostKeys ("<RETURN>")
	'espera(6)
	'call graficapantalla()
	'call esperapantalla1("IMPRESORA DE TERMINAL",14,38,21)
	'IMPRIME
	'SendHostKeys ("<RETURN>")
End Sub

Sub verificaParametros()
    dim relacion,estado,existe,ret,finalizador,fila,resultado
    'dim consultas()
    dim registro()
    dim contador,numero
    dim ejey
    dim pivot
    dim extra1,validador
    dim control
    extra1=0
    control=0
    pivot=False
    fila="inicio"
    existe=False
    ejey=17
    contador=0
    'ReDim consultas(20)
    ReDim registro(10)
    Do While existe=False and fila<>""
        call esperapantalla1("Estado",16,28,6)
        relacion=GetString(ejey,18,7)
        estado=GetString(ejey,27,7)
        numero=GetString(ejey,37,7)
        'msgbox(numero)
		espera(1)
        if relacion="TITULAR" and estado="VIGENTE" then
			ret = WaitForHostUpdate(10)
            numero=GetString(ejey,37,7)
            'consultas(contador) = numero
            resultado=resultado&"|"&numero
            contador=contador + 1
            ejey = ejey + 1
			espera(1)
            fila=GetString(ejey,18,7)
            ret = WaitForHostUpdate(10)
            SendHostKeys ("3")
        else
            ejey = ejey + 1
            fila=GetString(ejey,18,7)
            ret = WaitForHostUpdate(10)
            SendHostKeys ("3")
        end if
        finalizador=GetString(ejey,18,7)
        if finalizador="DDDDDDD" then
            existe=True
            ret = WaitForHostUpdate(10)
            SendHostKeys ("3")
        end if
    Loop'
    
    ejey=ejey-1
    Do While pivot=False and fila<>""
                'espera(2)
                relacion=GetString(ejey,18,7)
                estado=GetString(ejey,27,7)
                numero=GetString(ejey,37,7)
                'msgbox(contador)
                if relacion="TITULAR" and estado="VIGENTE" then
                    numero=GetString(ejey,37,7)
                    'consultas(contador) = numero
                    resultado=resultado&"|"&numero
                    registro(extra1) = numero
                    extra1 = extra1+1
                    contador=contador + 1
                    ret = WaitForHostUpdate(10)
                    SendHostKeys ("3")
                else
                    numero=GetString(ejey,37,7)
                    registro(extra1) = numero
                    extra1= extra1 + 1
                    ret = WaitForHostUpdate(10)
                    SendHostKeys ("3")
                end if
                validador=GetString(ejey,37,7)
                control=extra1
                control=control-1
                if registro(control) = validador then
                    pivot=True
                end if
    Loop
    consultas=Split(resultado, "|")
    'msgbox(consultas(0))
    obtencionReportes(consultas)
     
 End Sub
 
 Sub obtencionReportes(byref consultas)
    Dim ret,controlador,consulta,numero
    Dim ejey
    ejey=17
    'controlador=False
    For Each consulta in consultas
        if consulta<>"" then
            ret = WaitForHostUpdate(10)
            SendHostKeys ("<ETX>")
            ret = WaitForHostUpdate(10)
            SendHostKeys ("<RETURN>")
            espera(1)
            ret = WaitForHostUpdate(10)
            SendHostKeys ("<RETURN>")
            'msgbox(consulta)
            ret = WaitForHostUpdate(10)
            SendHostKeys (consulta)
            'espera(1)
            ret = WaitForHostUpdate(10)
            SendHostKeys ("<RETURN>")
            'espera(1)
            ret = WaitForHostUpdate(10)
            SendHostKeys ("<RETURN>")
            ret = WaitForHostUpdate(10)
            SendHostKeys ("<RETURN>")
            controlador=False
            Do While controlador=False
                call esperapantalla1("Estado",16,28,6)
                numero=GetString(ejey,37,7)
                'msgbox(numero)
                if consulta=numero then
                    ret = WaitForHostUpdate(10)
                    SendHostKeys ("<RETURN>")
                    'call espera (1)
                    call esperapantalla1("Termine de procesar..",23,1,21)
                    espera(2)
                    SendHostKeys ("<RETURN>")
                    call EsperarExistenciaArchivo()
                    'call espera (1)
                    call mueve_archivo (numero)
                    'call espera (1)
                    controlador=True
                else
                    ret = WaitForHostUpdate(2)
                    SendHostKeys ("3")
                    ejey = ejey + 1
                    numero=GetString(ejey,37,7)
                    if numero="DDDDDDD" then
                        ejey=21
                    end if
                end if
            Loop
        end if
	Next
 End Sub
 
Sub reingreso()
	Dim Text, ret
	SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("3")
	ret = WaitForHostUpdate(10)
    SendHostKeys ("3")
	ret = WaitForHostUpdate(10)	
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)	
End Sub

sub LeeArchivo()
	dim fso111
	dim filename
	dim listFile
	dim listLines
	'dim procesado
	dim line, line2
	Set fso111=CreateObject("Scripting.FileSystemObject")
	listFile = fso111.OpenTextFile(rutacuentas).ReadAll
    'MsgBox(listFile)
    call elimina_archivo(ruta_print_job)
	call EsperarInexistenciaArchivo()
	call extracto_bancario(listFile)
	call espera (1)
	'call EsperarExistenciaArchivo()
	'call espera (1)
	'call mueve_archivo (listFile)
	'call espera (1)
	'listLines = Split(listFile, vbCrLf)
	'For Each line In listLines
		'procesado=False 
	'	if line <> "" then
	'		line2= Split(line, "|")
	'		espera (1)
			'msgbox (line )
			'call elimina_archivo(ruta_print_job)
			'call EsperarInexistenciaArchivo()
	'		call extracto_bancario(line2(0),line2(1))
	'		call espera (1)
	'		call EsperarExistenciaArchivo()
	'		call espera (1)
	'		call mueve_archivo (line2(0)& "_" & line2(1))
	'		call espera (1)
	'		call reingreso()
		'end if
	'Next
End Sub

sub mueve_archivo(byref banco_cuenta)
	dim fso
	dim objFSO
	dim mensaje
	dim objshell
	Set fso = CreateObject("Scripting.FileSystemObject")
	Set objFSO = CreateObject("Scripting.FileSystemObject")
		call espera (1)
		If (fso.FileExists(ruta_print_job)) Then
			call espera(1)
			objFSO.CopyFile ruta_print_job,rutaprocesados & banco_cuenta & ".txt"
			call espera(1)
			set objshell = CreateObject("wscript.shell")
			'objshell.run "C:\AD\PROCONTA\scripts\del_queue.bat" , 0 , 0
			Set(objshell)=Nothing
			call elimina_archivo(ruta_print_job)
			call EsperarInexistenciaArchivo()
			espera(1)
		End If
		set fso = Nothing
		set objFSO = Nothing
end sub

sub elimina_archivo(byref file)
	on error resume next
	dim fso, PV5
	Set fso = CreateObject("Scripting.FileSystemObject")
		If (fso.FileExists(file)) Then 
			Set PV5 = CreateObject("Scripting.FileSystemObject")
			
			set fso = Nothing
			''WScript.Echo "Borrando "  & file
			PV5.deletefile file , True
			set PV5 = Nothing
		Else 
			''WScript.Echo "No se encontro "  & file
		End If
end sub

Sub espera (byref cuanto)
	dim x
	dim ret
	 For x = 1 To cuanto
		 ret = WaitForHostUpdate(delay)
	Next
end sub

sub busca_saldo_disponible_REVISAR()
	dim fso111
	dim filename
	dim listFile
	dim listLines
	'dim procesado
	dim line, line2
	Set fso111=CreateObject("Scripting.FileSystemObject")
	listFile = fso111.OpenTextFile(ruta_print_job).ReadAll
	listLines = Split(listFile, vbCrLf)
	For Each line In listLines
		'procesado=False 
		if line <> "" then
			line2= Split(line, "|")
			espera (1)
			'msgbox (line )
			'call elimina_archivo(ruta_print_job)
			'call EsperarInexistenciaArchivo()
			call extracto_bancario(line2(0),line2(1))
			call espera (4)
			call EsperarExistenciaArchivo()
			call espera (4)
			call mueve_archivo (line2(0)& "_" & line2(1))
			call reingreso()
		end if
	Next
End Sub

Sub cerrar ()
		'SendHostKeys ("<DOWN>")
		'SendHostKeys ("<DOWN>")
		'SendHostKeys ("<DOWN>")
		'SendHostKeys ("<DOWN>")
		'SendHostKeys ("<ENTER>")
		
		'ExecMenuCmd ("File-Exit All")
		ExitAllSessions
End Sub

sub EscribeFin()
	
	dim fs12
	dim a12
			Set fs12 = CreateObject("Scripting.FileSystemObject")
			Set a12 = fs12.CreateTextFile(rutaprocesados &  "FIN.txt", True)
			a12.Close
End Sub

sub EscribeError(byref mensaje_error)
	dim fs12
	dim a12
	dim hora
	hora= Hour(Now())& Minute(Now()) & second(Now())
			Set fs12 = CreateObject("Scripting.FileSystemObject")
			Set a12 = fs12.CreateTextFile(ruterrores & sintesis_user_0 & "_" & sintesis_user & "_" & sintesis_fecha_ini & "_" & hora & "_ERR_SAI.txt", True)
			a12.WriteLine(mensaje_error)
			a12.Close			
End Sub

sub graficapantalla2()
	dim y, linea
	For y = 1 To 25
	linea = GetString(y,1, 80)
	msgbox y & " " & linea
	Next
end sub

sub ExtraeData()
		dim d_d, d_m, d_y
	dim mensaje
	dim arr_ini
	
	dim fs11
	dim a11	
	arr_ini = dateformat(sintesis_fecha_ini)
	d_d = mid(arr_ini,1,2)
	d_m = mid(arr_ini,4,2)
	d_y = mid(arr_ini,7,4) 
	
	msgbox(rol)
	if (rol="CAJ") then
		SendHostKeys ("<DOWN>")	
		'sintesis_fecha_fin=  ReadIni(ini_sintesis_fechas,"FECHAS","FECHA_FIN")
		call espera(1)	
		SendHostKeys ("<RETURN>")
		call espera(1)	
		SendHostKeys ("9999") 
		call espera(1)	
		SendHostKeys ("<RETURN>")
		call espera(1)	
		SendHostKeys (d_d)
		call espera(1)	
		SendHostKeys (d_m)
		call espera(1)	
		SendHostKeys (d_y)
		call espera(1)		
		SendHostKeys ("<RIGHT>")
		call espera(1)	

		SendHostKeys ("<ANSIF2>")
				
		call esperapantalla("MSG",22,2, 3)
		mensaje = GetString(22, 7, 6)		
		
		if mensaje = "Aliste" then
			'MsgBox ("SI	HABIA  "& mensaje)
			call espera(1)	
			SendHostKeys ("<RETURN>")
			
			call EsperarExistenciaArchivo(fileoriginal)
			
			call mueve_archivo(fileoriginal,sintesis_user & "_TODOS" ,rutaarchivosnuevos,arr_ini)
			
		else
			'MsgBox ("NO HABIA NADA "& mensaje)		
			
			Set fs11 = CreateObject("Scripting.FileSystemObject")
			Set a11 = fs11.CreateTextFile(rutaarchivosnuevos &  rol & "_" & sintesis_user & "_TODOS_" & d_d & d_m & d_y & ".txt", True)
			mensaje = GetString(22, 7, 30)		
			a11.WriteLine(mensaje)
			a11.Close

			call espera(1)	
			SendHostKeys ("<ESC>")
			call espera(1)	
			SendHostKeys ("<ESC>")
			call espera(1)	
			
		end if
		
			call espera(2)
	end if 
	
	if (rol="SUP") then
		SendHostKeys ("<DOWN>")	
		'sintesis_fecha_fin=  ReadIni(ini_sintesis_fechas,"FECHAS","FECHA_FIN")
		call espera(1)	
		SendHostKeys ("<RETURN>")
		call espera(1)	
		SendHostKeys ("9999") 
		call espera(1)	
		SendHostKeys ("<RETURN>")
		call espera(1)
		SendHostKeys ("9999") 
		call espera(1)		
		SendHostKeys (d_d)
		call espera(1)	
		SendHostKeys (d_m)
		call espera(1)	
		SendHostKeys (d_y)
		call espera(1)		
		SendHostKeys (d_d)
		call espera(1)	
		SendHostKeys (d_m)
		call espera(1)	
		SendHostKeys (d_y)
		call espera(1)		

		SendHostKeys ("<RIGHT>")
		call espera(1)	

		SendHostKeys ("<ANSIF2>")
				
		call esperapantalla("MSG",22,2, 3)
		mensaje = GetString(22, 7, 6)		
		
		if mensaje = "Aliste" then
			'MsgBox ("SI	HABIA  "& mensaje)
			call espera(1)	
			SendHostKeys ("<RETURN>")
			
			call EsperarExistenciaArchivo(fileoriginal)
			
			call mueve_archivo(fileoriginal,sintesis_user & "_TODOS" ,rutaarchivosnuevos,arr_ini)
			
		else
			'MsgBox ("NO HABIA NADA "& mensaje)		
			
			Set fs11 = CreateObject("Scripting.FileSystemObject")
			Set a11 = fs11.CreateTextFile(rutaarchivosnuevos &  rol & "_" & sintesis_user & "_TODOS_" & d_d & d_m & d_y & ".txt", True)
			mensaje = GetString(22, 7, 30)		
			a11.WriteLine(mensaje)
			a11.Close

			call espera(1)	
			SendHostKeys ("<ESC>")
			call espera(1)	
			SendHostKeys ("<ESC>")
			call espera(1)	
			
		end if
		
			call espera(2)
	end if 
	
	
End Sub

sub EsperarExistenciaArchivo()
	dim fso, existe
	dim esperador, revisador
	Set fso = CreateObject ( "Scripting.FileSystemObject")
	existe = False
	'espera(2)
	esperador=0	
	revisador=""
	Do While existe = False
		espera(1)
		'revisador=Revisar()
		'msgbox ("Revisar |" & Revisar()&"|    Esperador |"& esperador &"|" )
						
		If (fso.FileExists(ruta_print_job)) Then
			'If revisador > 200 Then
				'if busca_saldo_disponible=true then
					'set fso = Nothing
					'existe = True
					'MsgBox Now &" Existe " & fso.FileExists(ruta_archivo)
				'end if
			'End If
			
			
		'	If revisador < 200 Then
				espera(3)
		'		esperador=esperador+1		
		'	End If

			
		'	if esperador=1000 then
				existe = True
		'	end if
		'Else
		'	If revisador = "" Then
		'		espera(1)
		'		esperador=esperador+1		
		'	End If
		'	'MsgBox Now &" No existe " & fso.FileExists(ruta_archivo)
		End If
	Loop
	espera(1)
end Sub

sub EsperarInexistenciaArchivo()
	dim fso, inexiste
	Set fso = CreateObject ( "Scripting.FileSystemObject")
	inexiste = False
	Do While inexiste = False
		espera(1)
		If (not fso.FileExists(ruta_print_job))  Then
			set fso = Nothing
			inexiste = True 	
			'MsgBox Now &" no Existe " 
		Else  	
			'MsgBox Now &"  existe " 
		End If
		call elimina_archivo(ruta_print_job)
	Loop
	espera(1)
end Sub

sub salirmenu()
	dim ret
	call BuscaMenu("* Salir del Sistema","DOWN")
	SendHostKeys ("<RETURN>")
	
end sub

Function Revisar()
On error resume next
	Dim objFSO, objFile
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objFile = objFSO.GetFile(ruta_print_job)
	Revisar = objFile.Size
	Set objFile = Nothing
	Set objFSO = Nothing
End Function

Function BuscaMenu ( myMenu, myDirection)
	BuscaMenu=False
	dim i, menu,y, ret,j
	'ret = WaitForHostUpdate(10)
	j=20	
	y=1
	while y < 15
		
		For i = 14 To j 			
			menu = trim(getstring(i,3,21))	
			if (menu = myMenu) then
				y=16
				BuscaMenu=True
				exit for
			end if	
			
		Next
		
			if (y < 15) then 
				SendHostKeys ("<"& myDirection &">")
				ret = WaitForHostUpdate(10)
				y=y+1
			end if
		
	wend
	
	'msgbox(menu)
End Function

sub Escriberesultado(byref ruta_archivo, byref agencia, byref fecha, byref archivo, byref  contenido )
	dim fso, existe
	Set fso = CreateObject ( "Scripting.FileSystemObject")
	
	if fso.FolderExists(ruta_archivo & agencia) = False  then
		fso.CreateFolder(ruta_archivo & agencia)
	end if
	
	if fso.FolderExists(ruta_archivo & agencia & "\" & fecha) = False  then
		fso.CreateFolder(ruta_archivo & agencia & "\" & fecha)
	end if
	
	if fso.FileExists(ruta_archivo & agencia & "\" & fecha  & "\" & archivo & ".txt") = False  then
		fso.CreateTextFile(ruta_archivo & agencia & "\" & fecha  & "\" & archivo & ".txt")
	end if
	
	dim a12
	set a12=fso.OpenTextFile(ruta_archivo  & agencia & "\" & fecha  & "\" & archivo & ".txt",8,true)
	a12.WriteLine(trim(contenido))
	a12.Close

	set fso=nothing
end Sub

Function VerificaSolicitudesPrevias (byref archivo2)
	on error resume next
	dim objFSO, objFolder, colFiles, objFile
	VerificaSolicitudesPrevias=False
 
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objFolder = objFSO.GetFolder(rutaresultados & sintesis_agencia & "\" & sintesis_fecha_ini  )
	Set colFiles = objFolder.Files
	
	For Each objFile in colFiles
		'msgbox(InStr (objFile , archivo2))
		if (InStr (objFile , archivo2)) > 0 then
			VerificaSolicitudesPrevias=True 
			Exit For
		end if
	Next
	
	set objFSO=nothing
	set colFiles=nothing
	set colFiles=nothing
end function

function busca_saldo_disponible()
	busca_saldo_disponible=false
	dim fso111
	dim filename
	dim listFile
	dim listLines
	'dim procesado
	dim line, line2
	dim contenido
	Set fso111=CreateObject("Scripting.FileSystemObject")
	listFile = fso111.OpenTextFile(ruta_print_job).ReadAll
	contenido=Instr(listFile,"Saldo Disponible:")
	if contenido>0 then
		busca_saldo_disponible=true
		espera (1)
	end if		
End function

sub EscribePantalla(byref linea, byref ruta)
	dim fs12
	dim a12		
	dim fecha
	fecha = Day(Now())& Month(Now()) & Year(Now()) &"_"& Hour(Now()) & Minute(Now()) & Second(Now())
			Set fs12 = CreateObject("Scripting.FileSystemObject")
			Set a12 = fs12.CreateTextFile(ruta & "pantalla_" & fecha & ".txt", True)
			a12.WriteLine(linea & vbCrLf)
			a12.Close			
End Sub