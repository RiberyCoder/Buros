Option Explicit

dim rol
dim sintesis_user_0
dim sintesis_user
dim sintesis_pass
dim sintesis_agencia
dim sintesis_fecha_ini
dim sai_un
dim ini
dim fin

dim error_generico

dim hoy
dim desde, desde_
dim hasta, hasta_
dim delay
delay=1

dim rutacuentas
rutacuentas="C:\AD\PROCONTA\scripts\cuentas_sai_passport.txt"

dim rutafechas
rutafechas="C:\AD\PROCONTA\PASSPORT\consulta_fechas\fechas.txt"

dim rutacredenciales
rutacredenciales="C:\AD\PROCONTA\PASSPORT\credenciales\credenciales_sai.txt"

dim ruta_print_job
ruta_print_job="C:\AD\PROCONTA\archivos\tempsintesis\PrintJob.txt"

dim rutaprocesados
rutaprocesados="C:\AD\PROCONTA\archivos\SAI\"

dim rutacarpetanueva
dim errorloguin
dim mensaje

Sub ZMain()
	Dim Text, ret
		sintesis_user=  ReadIni(rutacredenciales ,"CREDENCIALES","OTR_USER")
	sintesis_pass=  ReadIni(rutacredenciales ,"CREDENCIALES","OTR_PASS")
	ini=ReadIni(rutafechas,"FECHAS","fechaini")
	fin=ReadIni(rutafechas,"FECHAS","fechafin")
	if (Inicia_sesion2 = False) then
		
	else
		call elimina_archivo(ruta_print_job)
		call navegacion()
		call LeeArchivo()
		call navegacion2()
		call cerrar()
		
			
		
		
		'if (len(sai_un)>0) Then
			'call LeeArchivo()
			'call salirmenu()	
		'else
			'call EscribeError( "EL USUARIO NO TIENE UNA UNIDAD DE NEGOCIOS VALIDA CONTACTARSE CON DANIELA SANJINEZ" )
	end if
End sub

Function Inicia_sesion2 ()
		Inicia_sesion2=False
		
		SendHostKeys (sintesis_user)
		call espera(1)
		SendHostKeys ("<RETURN>")
		call espera(1)
		errorloguin = trim(GetString(23,1,40))
		if (errorloguin <> "" )then 
			Inicia_sesion2=False
			call EscribeError( errorloguin )	
			Exit Function
		else
			SendHostKeys (sintesis_pass)
			call espera(1)
			SendHostKeys ("<RETURN>")
		end if
		
		call espera(1)
		
		mensaje=trim(GetString(13, 2, 50))
		
		'msgbox (mensaje)
		'Exit Function
		
		if mensaje = "MODULOS" then			
			Inicia_sesion2=True
		else
			call EscribeError("NO SE ENCONTRO EL MENU DE MODULOS VERIFIQUE POR FAVOR")	
			Inicia_sesion2=False
		end if	
	
End Function

Function ReadIni( myFilePath, mySection, myKey )
	Const ForReading   = 1
	Const ForWriting   = 2
	Const ForAppending = 8

	Dim intEqualPos
	Dim objFSO, objIniFile
	Dim strFilePath, strKey, strLeftString, strLine, strSection

	Set objFSO = CreateObject( "Scripting.FileSystemObject" )

	ReadIni = ""
	strFilePath = Trim( myFilePath )
	strSection = Trim( mySection )
	strKey = Trim( myKey )

	If objFSO.FileExists( strFilePath ) Then
		Set objIniFile = objFSO.OpenTextFile( strFilePath, ForReading, False )
		Do While objIniFile.AtEndOfStream = False
			strLine = Trim( objIniFile.ReadLine )

			' Check if section is found in the current line
			If LCase( strLine ) = "[" & LCase( strSection ) & "]" Then
				strLine = Trim( objIniFile.ReadLine )

				' Parse lines until the next section is reached
				Do While Left( strLine, 1 ) <> "["
					' Find position of equal sign in the line
					intEqualPos = InStr( 1, strLine, "=", 1 )
					If intEqualPos > 0 Then
						strLeftString = Trim( Left( strLine, intEqualPos - 1 ) )
						' Check if item is found in the current line
						If LCase( strLeftString ) = LCase( strKey ) Then
							ReadIni = Trim( Mid( strLine, intEqualPos + 1 ) )
							' In case the item exists but value is blank
							If ReadIni = "" Then
								ReadIni = " "
							End If
							' Abort loop when item is found
							Exit Do
						End If
					End If

					' Abort if the end of the INI file is reached
					If objIniFile.AtEndOfStream Then Exit Do

					' Continue with next line
					strLine = Trim( objIniFile.ReadLine )
				Loop
			Exit Do
			End If
		Loop
		objIniFile.Close
	Else
		'WScript.Echo strFilePath & " doesn't exists. Exiting..."
		'Wscript.Quit 1
	End If
End Function

Sub navegacion()
	Dim Text, ret
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	'SendHostKeys ("<DOWN>")
	'ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
End Sub

Sub navegacion2()
	Dim Text, ret
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
End Sub

Sub extracto_bancario (byref banco,byref cuenta)
	Dim Text, ret
	'ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	'SELECCIONA BANCO (1-8)
	SendHostKeys (banco)
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	'INGRESA NUMERO DE CUENTA BANCARIA
	SendHostKeys (cuenta)
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys (ini)
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys (fin)
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("S")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<RETURN>")
	espera(6)
	'IMPRIME
	SendHostKeys ("<RETURN>")
	
	
End Sub

Sub reingreso()
	Dim Text, ret
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
	SendHostKeys ("<DOWN>")
	ret = WaitForHostUpdate(10)
		
	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)

	SendHostKeys ("<RETURN>")
	ret = WaitForHostUpdate(10)	
	SendHostKeys ("<DOWN>")
End Sub

sub LeeArchivo()
	dim fso111
	dim filename
	dim listFile
	dim listLines
	'dim procesado
	dim line, line2
	Set fso111=CreateObject("Scripting.FileSystemObject")
	listFile = fso111.OpenTextFile(rutacuentas).ReadAll
	listLines = Split(listFile, vbCrLf)
	For Each line In listLines
		'procesado=False 
		if line <> "" then
			line2= Split(line, "|")
			espera (1)
			'msgbox (line )
			'call elimina_archivo(ruta_print_job)
			'call EsperarInexistenciaArchivo()
			call extracto_bancario(line2(0),line2(1))
			call espera (1)
			call EsperarExistenciaArchivo()
			call espera (1)
			call mueve_archivo (line2(0)& "_" & line2(1))
			call espera (1)
			call reingreso()
		end if
	Next
End Sub

sub mueve_archivo(byref banco_cuenta)
	dim fso
	dim objFSO
	dim mensaje
	dim objshell
	Set fso = CreateObject("Scripting.FileSystemObject")
	Set objFSO = CreateObject("Scripting.FileSystemObject")
		call espera (1)
		If (fso.FileExists(ruta_print_job)) Then
			call espera(1)
			objFSO.CopyFile ruta_print_job,rutaprocesados & banco_cuenta & ".txt"
			call espera(1)
			set objshell = CreateObject("wscript.shell")
			'objshell.run "C:\AD\PROCONTA\scripts\del_queue.bat" , 0 , 0
			Set(objshell)=Nothing
			call elimina_archivo(ruta_print_job)
			call EsperarInexistenciaArchivo()
			espera(1)
		End If
		set fso = Nothing
		set objFSO = Nothing
end sub

sub elimina_archivo(byref file)
	on error resume next
	dim fso, PV5
	Set fso = CreateObject("Scripting.FileSystemObject")
		If (fso.FileExists(file)) Then 
			Set PV5 = CreateObject("Scripting.FileSystemObject")
			
			set fso = Nothing
			''WScript.Echo "Borrando "  & file
			PV5.deletefile file , True
			set PV5 = Nothing
		Else 
			''WScript.Echo "No se encontro "  & file
		End If
end sub

Sub espera (byref cuanto)
	dim x
	dim ret
	 For x = 1 To cuanto
		 ret = WaitForHostUpdate(delay)
	Next
end sub

sub busca_saldo_disponible()
	dim fso111
	dim filename
	dim listFile
	dim listLines
	'dim procesado
	dim line, line2
	Set fso111=CreateObject("Scripting.FileSystemObject")
	listFile = fso111.OpenTextFile(ruta_print_job).ReadAll
	listLines = Split(listFile, vbCrLf)
	For Each line In listLines
		'procesado=False 
		if line <> "" then
			line2= Split(line, "|")
			espera (1)
			'msgbox (line )
			'call elimina_archivo(ruta_print_job)
			'call EsperarInexistenciaArchivo()
			call extracto_bancario(line2(0),line2(1))
			call espera (4)
			call EsperarExistenciaArchivo()
			call espera (4)
			call mueve_archivo (line2(0)& "_" & line2(1))
			call reingreso()
		end if
	Next
End Sub

Sub cerrar ()
		'SendHostKeys ("<DOWN>")
		'SendHostKeys ("<DOWN>")
		'SendHostKeys ("<DOWN>")
		'SendHostKeys ("<DOWN>")
		'SendHostKeys ("<ENTER>")
		
		'ExecMenuCmd ("File-Exit All")
		ExitAllSessions
End Sub

sub EscribeFin()
	
	dim fs12
	dim a12
			Set fs12 = CreateObject("Scripting.FileSystemObject")
			Set a12 = fs12.CreateTextFile(rutaarchivosnuevos &  "FIN.txt", True)
			a12.Close
End Sub

sub EscribeError(byref mensaje_error)
	dim fs12
	dim a12
	dim hora
	hora= Hour(Now())& Minute(Now()) & second(Now())
			Set fs12 = CreateObject("Scripting.FileSystemObject")
			Set a12 = fs12.CreateTextFile(ruterrores & sintesis_user_0 & "_" & sintesis_user & "_" & sintesis_fecha_ini & "_" & hora & "_ERR_SAI.txt", True)
			a12.WriteLine(mensaje_error)
			a12.Close			
End Sub

sub graficapantalla()
	dim y, linea
	For y = 1 To 25
	linea = GetString(y,1, 80)
	msgbox y & " " & linea
	Next
end sub

sub ExtraeData()
		dim d_d, d_m, d_y
	dim mensaje
	dim arr_ini
	
	dim fs11
	dim a11	
	arr_ini = dateformat(sintesis_fecha_ini)
	d_d = mid(arr_ini,1,2)
	d_m = mid(arr_ini,4,2)
	d_y = mid(arr_ini,7,4) 
	
	msgbox(rol)
	if (rol="CAJ") then
		SendHostKeys ("<DOWN>")	
		'sintesis_fecha_fin=  ReadIni(ini_sintesis_fechas,"FECHAS","FECHA_FIN")
		call espera(1)	
		SendHostKeys ("<RETURN>")
		call espera(1)	
		SendHostKeys ("9999") 
		call espera(1)	
		SendHostKeys ("<RETURN>")
		call espera(1)	
		SendHostKeys (d_d)
		call espera(1)	
		SendHostKeys (d_m)
		call espera(1)	
		SendHostKeys (d_y)
		call espera(1)		
		SendHostKeys ("<RIGHT>")
		call espera(1)	

		SendHostKeys ("<ANSIF2>")
				
		call esperapantalla("MSG",22,2, 3)
		mensaje = GetString(22, 7, 6)		
		
		if mensaje = "Aliste" then
			'MsgBox ("SI	HABIA  "& mensaje)
			call espera(1)	
			SendHostKeys ("<RETURN>")
			
			call EsperarExistenciaArchivo(fileoriginal)
			
			call mueve_archivo(fileoriginal,sintesis_user & "_TODOS" ,rutaarchivosnuevos,arr_ini)
			
		else
			'MsgBox ("NO HABIA NADA "& mensaje)		
			
			Set fs11 = CreateObject("Scripting.FileSystemObject")
			Set a11 = fs11.CreateTextFile(rutaarchivosnuevos &  rol & "_" & sintesis_user & "_TODOS_" & d_d & d_m & d_y & ".txt", True)
			mensaje = GetString(22, 7, 30)		
			a11.WriteLine(mensaje)
			a11.Close

			call espera(1)	
			SendHostKeys ("<ESC>")
			call espera(1)	
			SendHostKeys ("<ESC>")
			call espera(1)	
			
		end if
		
			call espera(2)
	end if 
	
	if (rol="SUP") then
		SendHostKeys ("<DOWN>")	
		'sintesis_fecha_fin=  ReadIni(ini_sintesis_fechas,"FECHAS","FECHA_FIN")
		call espera(1)	
		SendHostKeys ("<RETURN>")
		call espera(1)	
		SendHostKeys ("9999") 
		call espera(1)	
		SendHostKeys ("<RETURN>")
		call espera(1)
		SendHostKeys ("9999") 
		call espera(1)		
		SendHostKeys (d_d)
		call espera(1)	
		SendHostKeys (d_m)
		call espera(1)	
		SendHostKeys (d_y)
		call espera(1)		
		SendHostKeys (d_d)
		call espera(1)	
		SendHostKeys (d_m)
		call espera(1)	
		SendHostKeys (d_y)
		call espera(1)		

		SendHostKeys ("<RIGHT>")
		call espera(1)	

		SendHostKeys ("<ANSIF2>")
				
		call esperapantalla("MSG",22,2, 3)
		mensaje = GetString(22, 7, 6)		
		
		if mensaje = "Aliste" then
			'MsgBox ("SI	HABIA  "& mensaje)
			call espera(1)	
			SendHostKeys ("<RETURN>")
			
			call EsperarExistenciaArchivo(fileoriginal)
			
			call mueve_archivo(fileoriginal,sintesis_user & "_TODOS" ,rutaarchivosnuevos,arr_ini)
			
		else
			'MsgBox ("NO HABIA NADA "& mensaje)		
			
			Set fs11 = CreateObject("Scripting.FileSystemObject")
			Set a11 = fs11.CreateTextFile(rutaarchivosnuevos &  rol & "_" & sintesis_user & "_TODOS_" & d_d & d_m & d_y & ".txt", True)
			mensaje = GetString(22, 7, 30)		
			a11.WriteLine(mensaje)
			a11.Close

			call espera(1)	
			SendHostKeys ("<ESC>")
			call espera(1)	
			SendHostKeys ("<ESC>")
			call espera(1)	
			
		end if
		
			call espera(2)
	end if 
	
	
End Sub

sub EsperarExistenciaArchivo()
	dim fso, existe
	dim esperador, revisador
	Set fso = CreateObject ( "Scripting.FileSystemObject")
	existe = False
	'espera(2)
	esperador=0	
	revisador=""
	Do While existe = False
		espera(1)
		revisador=Revisar()
		'msgbox ("Revisar |" & Revisar()&"|    Esperador |"& esperador &"|" )
						
		If (fso.FileExists(ruta_print_job)) Then
			If revisador > 2000 Then
				if busca_saldo_disponible=true then
					set fso = Nothing
					existe = True
					'MsgBox Now &" Existe " & fso.FileExists(ruta_archivo)
				end if
			End If
			
			
			If revisador < 2000 Then
				espera(1)
				esperador=esperador+1		
			End If

			
			if esperador=10 then
				existe = True
			end if
		Else
			If revisador = "" Then
				espera(1)
				esperador=esperador+1		
			End If
			'MsgBox Now &" No existe " & fso.FileExists(ruta_archivo)
		End If
	Loop
	espera(1)
end Sub

sub EsperarInexistenciaArchivo()
	dim fso, inexiste
	Set fso = CreateObject ( "Scripting.FileSystemObject")
	inexiste = False
	Do While inexiste = False
		espera(1)
		If (not fso.FileExists(ruta_print_job))  Then
			set fso = Nothing
			inexiste = True 	
			'MsgBox Now &" no Existe " 
		Else  	
			'MsgBox Now &"  existe " 
		End If
		call elimina_archivo(ruta_print_job)
	Loop
	espera(1)
end Sub

sub salirmenu()
	dim ret
	call BuscaMenu("* Salir del Sistema","DOWN")
	SendHostKeys ("<RETURN>")
	
end sub

Function Revisar()
On error resume next
	Dim objFSO, objFile
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objFile = objFSO.GetFile(ruta_print_job)
	Revisar = objFile.Size
	Set objFile = Nothing
	Set objFSO = Nothing
End Function

Function BuscaMenu ( myMenu, myDirection)
	BuscaMenu=False
	dim i, menu,y, ret,j
	'ret = WaitForHostUpdate(10)
	j=20	
	y=1
	while y < 15
		
		For i = 14 To j 			
			menu = trim(getstring(i,3,21))	
			if (menu = myMenu) then
				y=16
				BuscaMenu=True
				exit for
			end if	
			
		Next
		
			if (y < 15) then 
				SendHostKeys ("<"& myDirection &">")
				ret = WaitForHostUpdate(10)
				y=y+1
			end if
		
	wend
	
	'msgbox(menu)
End Function

sub Escriberesultado(byref ruta_archivo, byref agencia, byref fecha, byref archivo, byref  contenido )
	dim fso, existe
	Set fso = CreateObject ( "Scripting.FileSystemObject")
	
	if fso.FolderExists(ruta_archivo & agencia) = False  then
		fso.CreateFolder(ruta_archivo & agencia)
	end if
	
	if fso.FolderExists(ruta_archivo & agencia & "\" & fecha) = False  then
		fso.CreateFolder(ruta_archivo & agencia & "\" & fecha)
	end if
	
	if fso.FileExists(ruta_archivo & agencia & "\" & fecha  & "\" & archivo & ".txt") = False  then
		fso.CreateTextFile(ruta_archivo & agencia & "\" & fecha  & "\" & archivo & ".txt")
	end if
	
	dim a12
	set a12=fso.OpenTextFile(ruta_archivo  & agencia & "\" & fecha  & "\" & archivo & ".txt",8,true)
	a12.WriteLine(trim(contenido))
	a12.Close

	set fso=nothing
end Sub

Function VerificaSolicitudesPrevias (byref archivo2)
	on error resume next
	dim objFSO, objFolder, colFiles, objFile
	VerificaSolicitudesPrevias=False
 
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objFolder = objFSO.GetFolder(rutaresultados & sintesis_agencia & "\" & sintesis_fecha_ini  )
	Set colFiles = objFolder.Files
	
	For Each objFile in colFiles
		'msgbox(InStr (objFile , archivo2))
		if (InStr (objFile , archivo2)) > 0 then
			VerificaSolicitudesPrevias=True 
			Exit For
		end if
	Next
	
	set objFSO=nothing
	set colFiles=nothing
	set colFiles=nothing
end function

function busca_saldo_disponible()
	busca_saldo_disponible=false
	dim fso111
	dim filename
	dim listFile
	dim listLines
	'dim procesado
	dim line, line2
	dim contenido
	Set fso111=CreateObject("Scripting.FileSystemObject")
	listFile = fso111.OpenTextFile(ruta_print_job).ReadAll
	contenido=Instr(listFile,"Saldo Disponible:")
	if contenido>0 then
		busca_saldo_disponible=true
		espera (1)
	end if		
End function